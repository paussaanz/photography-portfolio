//  Aquí generamos nuevas clases utils o añadimos alguna funcionalidad nueva a las clases de bootstrap
:root {
  // usar la clase bg-image y llamar a este root en el style para añadir la imagen
  --bg-image: "";
  --bg-md-image: "";
  --bg-porcentaje: 0.4;
  --full-vh: 100vh;
}

@supports (height: 100dvh) {
  :root {
    --full-vh: 100dvh;
  }
}

* {
  margin: 0;
  box-sizing: border-box;
}

div {
  line-height: 1; /* O igual al tamaño de la fuente */
}

.z-index--5{
  z-index: 5;
}

#root{
  min-width: 100vw;
  min-height: 100vh;
}
.over {
  position: relative;
  overflow: clip;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0, 0, 0, var(--bg-porcentaje)); // Fondo oscuro por defecto
    z-index: 0; // Asegúrate de que esté entre el fondo y el contenido
    height: 100%;
  }

  * {
    z-index: 1; // El contenido tendrá un índice z más alto que el fondo
  }

  &--dark {
    &::before {
      background: rgba(0, 0, 0, var(--bg-porcentaje)); // Mantiene el fondo oscuro
    }
  }
}


.blur {
  filter: blur(4px);
  position: absolute;
  top: 0;
  left: 0;
  width: 101%;
  height: 100%;
  background-size: cover;
  background-position: center;
  z-index: -1;
}

/*GENERAL SCSS*/



.overflow {
  &--hidden {
    overflow: hidden !important; // Equivalente a "overflow-x-hidden"
  }

  &--clip {
    overflow: clip !important; // Equivalente a "overflow-x-hidden"
  }

  &--x-clip {
    overflow-x: clip !important; // Equivalente a "overflow-x-hidden"
  }

  &--x-hidden {
    overflow-x: hidden !important; // Equivalente a "overflow-x-hidden"
  }

  &--y-hidden {
    overflow-y: hidden !important; // Equivalente a "overflow-y-hidden"
  }

  &--y-clip {
    overflow-y: clip !important; // Equivalente a "overflow-y-clip"
  }
}

.object-fit {
  &--cover {
    object-fit: cover; // Equivalente a "object-fit-cover" en Bootstrap
  }

  &--contain {
    object-fit: contain; // Equivalente a "object-fit-contain" en Bootstrap
  }
}

.align-content {
  &--center {
    align-content: center; // Equivalente a "align-content-center" en Bootstrap
  }
}

.background {
  &--light {
    background-color: var(--cor-light); // Equivalente a "bg-light" en Bootstrap
  }

  &--primary {
    background-color: var(--cor-primary); // Equivalente a "bg-primary" en Bootstrap
  }

  &--transparent {
    background-color: transparent; // Equivalente a "bg-secondary" en Bootstrap
  }

  &--primary-greece {
    background-color: var(--cor-primary-greece); 
  }
  &--secondary-greece {
    background-color: var(--cor-secondary-greece); 
  }
  &--primary-tanzania {
    background-color: var(--cor-primary-tanzania); 
  }
  &--secondary-tanzania {
    background-color: var(--cor-secondary-tanzania); 
  }
  &--primary-dolomites {
    background-color: var(--cor-primary-dolomites); 
  }
  &--secondary-dolomites {
    background-color: var(--cor-secondary-dolomites); 
  }
}

.pointer-events {
  &--none {
    pointer-events: none; // Equivalente a "pointer-events-none" en Bootstrap
  }

  &--auto {
    pointer-events: auto; // Para restablecer el comportamiento de los eventos
  }
}

.translate {
  &--middle {
    transform: translate(-50%, -50%) !important;
  }

  &--middle-x {
    transform: translateX(-50%) !important;
  }

  &--middle-y {
    transform: translateY(-50%) !important;
  }
}

.block {
  &--display {
    display: block;
  }
}

.white-space--nowrap{
  white-space: nowrap;
}

.inset--0{
  inset: 0;
}
/*THEME BUTTON*/
.theme {
  &__animation {
    transition: 0.3s background-color;
  }

}

.floatingButton {
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 1030000;
  padding-top: 20px;
  padding-left: 50px;
  width: 650px;
  height: 100px;
}

.floatingButton-item,
.floatingButton-open-button {
  border-radius: 100%;
  width: 50px; /* Reducido */
  height: 50px; /* Reducido */
  margin-left: -25px; /* Ajustado para centrar correctamente */
  position: absolute;
  top: 20px;
  text-align: center;
  line-height: 50px; /* Ajustado para alineación */
  transform: translate3d(0, 0, 0);
  transition: transform ease-out 200ms;
  transition-delay: 300ms; /* Inicialmente sin delay */
}

.floatingButton-open-button img {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: -1;
}

.floatingButton-open-button:checked {
  transition-delay: 0ms; /* Inicialmente sin delay */
}

.floatingButton-open {
  display: none;
}

.floatingButton-open:checked + .floatingButton-open-button .hamburger-1 {
  transform: translate3d(0, 0, 0) rotate(45deg);
}
.floatingButton-open:checked + .floatingButton-open-button .hamburger-2 {
  transform: translate3d(0, 0, 0) scale(0.1, 1);
}
.floatingButton-open:checked + .floatingButton-open-button .hamburger-3 {
  transform: translate3d(0, 0, 0) rotate(-45deg);
}

.floatingButton-item span {
  display: inline-block;
  transform: rotate(90deg); /* Mantiene el texto recto */
}

.floatingButton-item:hover {
  background: white;
  color: #00bcd4;
}
.floatingButton-item:nth-child(3) {
  transition-duration: 180ms;
}
.floatingButton-item:nth-child(4) {
  transition-duration: 180ms;
}
.floatingButton-item:nth-child(5) {
  transition-duration: 180ms;
}
.floatingButton-item:nth-child(6) {
  transition-duration: 180ms;
}

.floatingButton-open-button {
  z-index: 2;
  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transition-duration: 400ms;
  transform: scale(1.1, 1.1) translate3d(0, 0, 0);
  cursor: pointer;
}

.floatingButton-open-button:hover {
  transform: scale(1.2, 1.2) translate3d(0, 0, 0);
}

.floatingButton-open:checked + .floatingButton-open-button {
  transition-timing-function: linear;
  transition-duration: 200ms;
  transform: scale(0.8, 0.8) translate3d(0, 0, 0);
}

.floatingButton-open:checked ~ .floatingButton-item:nth-child(3) {
  transform: rotate(-90deg) translate(100px) rotate(0deg);
  transition-delay: 0ms; /* Sin delay */
}

.floatingButton-open:checked ~ .floatingButton-item:nth-child(4) {
  transform: rotate(-45deg) translate(100px) rotate(-45deg);
  transition-delay: 100ms; /* Delay de 100ms */
}

.floatingButton-open:checked ~ .floatingButton-item:nth-child(5) {
  transform: rotate(0deg) translate(100px) rotate(-90deg);
  transition-delay: 200ms; /* Delay de 200ms */
}



.svg-filters {
  position: absolute;
  width: 0;
  height: 0;
  overflow: hidden; /* Evita que el contenido del SVG interfiera visualmente */
}
/* Cuando el botón está cerrado */
.floatingButton-open:not(:checked) ~ .floatingButton-item:nth-child(3) {
  transform: translate3d(0, 0, 0); /* Regresa al estado inicial */
  transition-delay: 300ms; /* Delay al cerrar */
}

.floatingButton-open:not(:checked) ~ .floatingButton-item:nth-child(4) {
  transform: translate3d(0, 0, 0); /* Regresa al estado inicial */
  transition-delay: 200ms; /* Delay al cerrar */
}

.floatingButton-open:not(:checked) ~ .floatingButton-item:nth-child(5) {
  transform: translate3d(0, 0, 0); /* Regresa al estado inicial */
  transition-delay: 100ms; /* Delay al cerrar */
}

.floatingButton-open:not(:checked) ~ .floatingButton-item:nth-child(6) {
  transform: translate3d(0, 0, 0); /* Regresa al estado inicial */
  transition-delay: 0ms; /* Delay al cerrar */
}

.floatingButton-open-button img {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotate(0deg); /* Posición inicial */
  transition: transform 300ms ease; /* Animación suave */
  z-index: -1;
}

/* Cuando el botón está abierto */
.floatingButton-open:checked + .floatingButton-open-button img {
  transform: translate(-50%, -50%) rotate(45deg); /* Gira 45 grados */
}

/* Cuando el botón está cerrado */
.floatingButton-open:not(:checked) + .floatingButton-open-button img {
  transform: translate(-50%, -50%) rotate(0deg); /* Regresa a 0 grados */
}


/*SCROLL*/
html.lenis,
html.lenis body {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto !important;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-smooth iframe {
  pointer-events: none;
}

@keyframes blobEffect {

  0%,
  100% {
    clip-path: circle(0% at 50% 50%);
  }

  50% {
    clip-path: circle(75% at 50% 50%);
  }
}

.blob-transition {
  animation: blobEffect 1s ease-in-out forwards;
}

@-webkit-keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.loader {
  &__images-section {
    // position: fixed;
    width: 100%;
    height: 100%;
    display: flex;
    gap: 1em;
    animation: fade-in 3s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;
  }

  &__images-col {
    position: relative;
    flex: 1;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1em;

    &-1,
    &-3,
    &-5 {
      top: 100%;
      .loader__images-image {
        top: 100%;
      }
    }

    &-2,
    &-4 {
      .loader__images-image {
        top: -100%;
      }
    }
  }

  &__images-image {
    position: relative;
    flex: 1;
    width: 100%;
    overflow: hidden;
  }

  &__image {
    height: 100%;
    width: 100%;
    object-fit: cover;
  }

  &__text{
    opacity: 0;
  }
}