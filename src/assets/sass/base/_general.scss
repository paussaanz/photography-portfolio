//  Aquí generamos nuevas clases utils o añadimos alguna funcionalidad nueva a las clases de bootstrap
:root {
  // usar la clase bg-image y llamar a este root en el style para añadir la imagen
  --bg-image: "";
  --bg-md-image: "";
  --bg-porcentaje: 0.4;
}

* {
  margin: 0;
  box-sizing: border-box;
}

.over {
  position: relative;
  overflow: clip;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0, 0, 0, var(--bg-porcentaje)); // Fondo oscuro por defecto
    z-index: 0; // Asegúrate de que esté entre el fondo y el contenido
    height: 100%;
  }

  * {
    z-index: 1; // El contenido tendrá un índice z más alto que el fondo
  }

  &--dark {
    &::before {
      background: rgba(0, 0, 0, var(--bg-porcentaje)); // Mantiene el fondo oscuro
    }
  }
}


.blur {
  filter: blur(4px);
  position: absolute;
  top: 0;
  left: 0;
  width: 101%;
  height: 100%;
  background-size: cover;
  background-position: center;
  z-index: -1;
}

/*GENERAL SCSS*/



.overflow {
  &--hidden {
    overflow: hidden !important; // Equivalente a "overflow-x-hidden"
  }

  &--clip {
    overflow: clip !important; // Equivalente a "overflow-x-hidden"
  }

  &--x-clip {
    overflow-x: clip !important; // Equivalente a "overflow-x-hidden"
  }

  &--x-hidden {
    overflow-x: hidden !important; // Equivalente a "overflow-x-hidden"
  }

  &--y-hidden {
    overflow-y: hidden !important; // Equivalente a "overflow-y-hidden"
  }

  &--y-clip {
    overflow-y: clip !important; // Equivalente a "overflow-y-clip"
  }
}

.object-fit {
  &--cover {
    object-fit: cover; // Equivalente a "object-fit-cover" en Bootstrap
  }

  &--contain {
    object-fit: contain; // Equivalente a "object-fit-contain" en Bootstrap
  }
}

.align-content {
  &--center {
    align-content: center; // Equivalente a "align-content-center" en Bootstrap
  }
}

.background {
  &--light {
    background-color: var(--cor-light); // Equivalente a "bg-light" en Bootstrap
  }

  &--dark {
    background-color: var(--cor-dark); // Equivalente a "bg-dark" en Bootstrap
  }

  &--primary {
    background-color: var(--cor-primary); // Equivalente a "bg-primary" en Bootstrap
  }

  &--secondary {
    background-color: var(--cor-secondary); // Equivalente a "bg-secondary" en Bootstrap
  }

  &--transparent {
    background-color: transparent; // Equivalente a "bg-secondary" en Bootstrap
  }
}

.pointer-events {
  &--none {
    pointer-events: none; // Equivalente a "pointer-events-none" en Bootstrap
  }

  &--auto {
    pointer-events: auto; // Para restablecer el comportamiento de los eventos
  }
}

.translate {
  &--middle {
    transform: translate(-50%, -50%) !important;
  }

  &--middle-x {
    transform: translateX(-50%) !important;
  }

  &--middle-y {
    transform: translateY(-50%) !important;
  }
}

.block {
  &--display {
    display: block;
  }
}

/*THEME BUTTON*/
.theme {

  &__button-container {
    position: fixed;
    bottom: 0;
    left: 0;
    padding-left: 20px;
    padding-bottom: 12px;
    z-index: 1030;
  }

  &__animation {
    transition: 0.3s background-color;
  }

}

/*SCROLL*/
html.lenis,
html.lenis body {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto !important;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-smooth iframe {
  pointer-events: none;
}

